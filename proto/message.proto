syntax = "proto3";

package types;

option java_multiple_files = true;
option java_outer_classname = "Types";
option java_package = "com.shared.types";
option go_package = "./types";

// The action the message will invoke on the handler
enum Action {
  Invalid_Action = 0;
  POST = 1;
  PUT = 2;
  PATCH = 3;
  DELETE = 4;
  GET = 5;
  Reply = 6;
  Notify = 7;
}

// The priority of the message
enum Priority {
  P8 = 0;
  P7 = 1;
  P6 = 2;
  P5 = 3;
  P4 = 4;
  P3 = 5;
  P2 = 6;
  P1 = 7;
}

/*
  Message is to transmit a piece of data, securely, from one process to one or more processes via
  Publish/Subscribe or Reuest/Reply
 */
message Message {
  // The source uuid identifier of the message sender
  string source = 1;
  // The source uuid identifier of the message sender vnet
  string source_vnet = 2;
  // The Destination Uuid
  string destination = 3;
  // The attn service name (e.g. topic)
  string service_name = 4;
  // The service area of the message, like ospf area
  int32 service_area = 5;
  // To uniquely identify the source message, sequence + source = unique message id.
  int32 sequence = 6;
  // Priority of this Message for the handler callback.
  Priority priority = 7;
  // The protobuf marshaled data, encrypted & encoded to base64 string
  string data = 8;
  // Action to invoke with this data on the service point
  Action action = 9;
  // timeout when request/reply
  int64 timeout = 10;
  // If this a fail notification, what is the failing info
  string fail_msg = 11;
  // If this message needs a sync request
  bool is_request = 12;
  // If this message a reply for a sync request
  bool is_reply = 13;
  // If this message part of a vnet transaction, the transaction data
  Transaction tr = 14;
}

enum TransactionState {
  Invalid_Transaction_State = 0;
  Create = 1;
  Created = 2;
  Start = 3;
  Lock = 4;
  Locked = 5;
  LockFailed = 6;
  Commit = 7;
  Commited = 8;
  Rollback = 9;
  Rollbacked = 10;
  Finish = 11;
  Finished = 12;
  Errored = 13;
}

message Transaction {
  string id = 1;
  TransactionState state = 2;
  string error = 3;
  int64 start_time = 4;
}

